const fs = require('fs');
const path = require('path');
const encrypt = require("../tools/decrypt").encrypt;
const axios = require('axios');
const wrapper = require('axios-cookiejar-support').wrapper;
const CookieJar = require('tough-cookie').CookieJar;

const jar = new CookieJar();
const client = wrapper(axios.create({
  withCredentials: true,
}));

function wait(ms) {
  return new Promise((resolve) => {
    setTimeout(resolve, ms);
  });
}

// GET THIS FROM A BROWSER WINDOW WITH THE LOGIN JSON OPEN (It's in the cookies of that[press F12 and refresh])
let sid = "960D2DF605FBCC1BD38BC802E1825785-n1"
// GET THIS FROM THE SAME BROWSER WINDOW! (It's in the page itself)
let ek = "B7CEB2TECFDC"

const cookieValue = `JSESSIONID=${sid}`;

// Set the cookie in the request headers
client.defaults.headers.common['Cookie'] = cookieValue

//quest ids
let questArray = [
  10001,
  10011,
  10012,
  10013,
  10021,
  10022,
  10023,
  10031,
  10032,
  10033,
  10041,
  10042,
  10043,
  10051,
  10052,
  10053,
  10061,
  10062,
  10063,
  10071,
  10072,
  10073,
  10081,
  10082,
  10083,
  10091,
  10092,
  10093,
  1001,
  1002,
  1003,
  10101,
  10102,
  10103,
  10111,
  10112,
  10113,
  10121,
  10122,
  10123,
  10131,
  11001,
  11011,
  11012,
  11013,
  11021,
  11022,
  11023,
  11031,
  11032,
  11033,
  11041,
  11042,
  11043,
  11051,
  11052,
  11053,
  11061,
  11062,
  11063,
  11071,
  11072,
  11073,
  11081,
  11082,
  11083,
  11091,
  11092,
  11093,
  11101,
  11102,
  11103,
  1101,
  1102,
  1103,
  11111,
  11112,
  11113,
  11121,
  11122,
  11123,
  11131,
  11132,
  11133,
  11141,
  11142,
  11143,
  11151,
  12001,
  12011,
  12012,
  12013,
  12021,
  12022,
  12023,
  12031,
  12032,
  12033,
  12041,
  12042,
  12043,
  12051,
  12052,
  12053,
  12061,
  12062,
  12063,
  12071,
  12072,
  12073,
  12081,
  12082,
  12083,
  12091,
  12092,
  12093,
  12101,
  12102,
  12103,
  12111,
  12112,
  12113,
  12121,
  12122,
  12123,
  1201,
  1202,
  1203,
  12131,
  12132,
  12133,
  12141,
  12142,
  12143,
  12151,
  12152,
  12153,
  12161,
  12162,
  12163,
  12171,
  12172,
  12173,
  12181,
  13001,
  13011,
  13012,
  13013,
  13021,
  13022,
  13023,
  13031,
  13032,
  13033,
  13041,
  13042,
  13043,
  13051,
  13052,
  13053,
  13061,
  13062,
  13063,
  13071,
  13072,
  13073,
  13081,
  13082,
  13083,
  13091,
  13092,
  13093,
  13101,
  13102,
  13103,
  13111,
  13112,
  13113,
  13121,
  13122,
  13123,
  1301,
  1302,
  1303,
  13131,
  13132,
  13133,
  13141,
  13142,
  13143,
  13151,
  13152,
  13153,
  13161,
  13162,
  13163,
  13171,
  14001,
  14011,
  14012,
  14013,
  14021,
  14022,
  14023,
  14031,
  14032,
  14033,
  14041,
  14042,
  14043,
  14051,
  14052,
  14053,
  14061,
  14062,
  14063,
  14071,
  14072,
  14073,
  14081,
  14082,
  14083,
  14091,
  14092,
  14093,
  14101,
  14102,
  14103,
  14111,
  14112,
  14113,
  14121,
  14122,
  14123,
  1401,
  1402,
  1403,
  14131,
  14132,
  14133,
  14141,
  14142,
  14143,
  14151,
  14152,
  14153,
  14161,
  14162,
  14163,
  14171,
  15001,
  15011,
  15012,
  15013,
  15021,
  15022,
  15023,
  15031,
  15032,
  15033,
  15041,
  15042,
  15043,
  15051,
  15052,
  15053,
  15061,
  15062,
  15063,
  15071,
  15072,
  15073,
  15081,
  15082,
  15083,
  15091,
  15092,
  15093,
  15101,
  15102,
  15103,
  1501,
  1502,
  1503,
  15111,
  15112,
  15113,
  15121,
  15122,
  15123,
  15131,
  15132,
  15133,
  15141,
  15142,
  15143,
  15151,
  15152,
  15153,
  15161,
  15171,
  16001,
  16011,
  16012,
  16013,
  16021,
  16022,
  16023,
  16031,
  16032,
  16033,
  16041,
  16042,
  16043,
  16051,
  16052,
  16053,
  16061,
  16062,
  16063,
  16071,
  16072,
  16073,
  16081,
  16082,
  16083,
  16091,
  16092,
  16093,
  16101,
  16102,
  16103,
  1601,
  1602,
  1603,
  16111,
  16112,
  16113,
  16121,
  16122,
  16123,
  16131,
  16132,
  16133,
  16141,
  16142,
  16143,
  16151,
  16152,
  16153,
  16161,
  16162,
  16163,
  16171,
  17001,
  17011,
  17012,
  17013,
  17021,
  17022,
  17023,
  17031,
  17032,
  17033,
  17041,
  17042,
  17043,
  17051,
  17052,
  17053,
  17061,
  17062,
  17063,
  17071,
  17072,
  17073,
  17081,
  17082,
  17083,
  17091,
  17092,
  17093,
  1701,
  1702,
  1703,
  17101,
  17102,
  17103,
  17111,
  17112,
  17113,
  17121,
  17122,
  17123,
  17131,
  17132,
  17133,
  17141,
  17991,
  18001,
  18011,
  18012,
  18013,
  18021,
  18022,
  18023,
  18031,
  18032,
  18033,
  18041,
  18042,
  18043,
  18051,
  18052,
  18053,
  18061,
  18062,
  18063,
  18071,
  18072,
  18073,
  1801,
  1802,
  1803,
  18081,
  18082,
  18083,
  18091,
  18092,
  18093,
  18101,
  18102,
  18103,
  18111,
  18112,
  18113,
  18121,
  18122,
  18123,
  18171,
  19001,
  19011,
  19012,
  19013,
  19021,
  19022,
  19023,
  19031,
  19032,
  19033,
  19041,
  19042,
  19043,
  19051,
  19052,
  19053,
  19061,
  19062,
  19063,
  19071,
  19072,
  19073,
  1901,
  1902,
  1903,
  19081,
  19082,
  19083,
  19091,
  19092,
  19093,
  19101,
  19102,
  19103,
  19111,
  19112,
  19113,
  19121,
  19122,
  19123,
  19131,
  20001,
  20011,
  20012,
  20013,
  20021,
  20022,
  20023,
  20031,
  20032,
  20033,
  20041,
  20042,
  20043,
  20051,
  20052,
  20053,
  20061,
  20062,
  20063,
  20071,
  20072,
  20073,
  2001,
  2002,
  2003,
  20081,
  20082,
  20083,
  20091,
  20092,
  20093,
  20101,
  20102,
  20103,
  20111,
  20112,
  20113,
  20121,
  20122,
  20123,
  20131,
  21001,
  21011,
  21012,
  21013,
  21021,
  21022,
  21023,
  21031,
  21032,
  21033,
  21041,
  21042,
  21043,
  21051,
  21052,
  21053,
  21061,
  21062,
  21063,
  21071,
  21072,
  21073,
  21081,
  21082,
  21083,
  21091,
  21092,
  21093,
  21101,
  21102,
  21103,
  2101,
  2102,
  2103,
  21111,
  21112,
  21113,
  21121,
  21122,
  21123,
  21131,
  21132,
  21133,
  21141,
  21142,
  21143,
  21151,
  21152,
  21153,
  21161,
  22001,
  22011,
  22012,
  22013,
  22021,
  22022,
  22023,
  22031,
  22032,
  22033,
  22041,
  22042,
  22043,
  22051,
  22052,
  22053,
  22061,
  22062,
  22063,
  22071,
  22072,
  22073,
  22081,
  22082,
  22083,
  22091,
  22092,
  22093,
  22101,
  22102,
  22103,
  2201,
  2202,
  2203,
  22111,
  22112,
  22113,
  22121,
  22122,
  22123,
  22131,
  22132,
  22133,
  22141,
  22142,
  22143,
  22151,
  22152,
  22153,
  22161,
  22162,
  22163,
  22171,
  22181,
  23001,
  23011,
  23012,
  23013,
  23021,
  23022,
  23023,
  23031,
  23032,
  23033,
  23041,
  23042,
  23043,
  23051,
  23052,
  23053,
  23061,
  23062,
  23063,
  23071,
  23072,
  23073,
  23081,
  23082,
  23083,
  23091,
  23092,
  23093,
  2301,
  2302,
  2303,
  23101,
  23102,
  23103,
  23111,
  23112,
  23113,
  23121,
  23122,
  23123,
  23131,
  23132,
  23133,
  23141,
  23142,
  23143,
  23151,
  23152,
  23153,
  23161,
  23162,
  23163,
  23171,
  24001,
  24011,
  24012,
  24013,
  24021,
  24022,
  24023,
  24031,
  24032,
  24033,
  24041,
  24042,
  24043,
  24051,
  24052,
  24053,
  24061,
  24062,
  24063,
  24071,
  24072,
  24073,
  24081,
  24082,
  24083,
  24091,
  24092,
  24093,
  2401,
  2402,
  2403,
  24101,
  24102,
  24103,
  24111,
  24112,
  24113,
  24121,
  24122,
  24123,
  24131,
  24132,
  24133,
  24141,
  24142,
  24143,
  24151,
  24152,
  24153,
  24161,
  24162,
  24163,
  24171,
  24172,
  24173,
  24181,
  25001,
  25011,
  25012,
  25013,
  25021,
  25022,
  25023,
  25031,
  25032,
  25033,
  25041,
  25042,
  25043,
  25051,
  25052,
  25053,
  25061,
  25062,
  25063,
  25071,
  25072,
  25073,
  25081,
  25082,
  25083,
  25091,
  25092,
  25093,
  25101,
  25102,
  25103,
  2501,
  2502,
  2503,
  25111,
  25112,
  25113,
  25121,
  25122,
  25123,
  25131,
  25132,
  25133,
  25141,
  25142,
  25143,
  25151,
  25152,
  25153,
  25161
]

// drama paths
let dramaArray = [
  "story/capter_01/000_qb",
  "story/capter_01/001_qb",
  "story/capter_01/002_qb",
  "story/capter_01/003_qb",
  "story/capter_01/004_qb",
  "story/capter_01/005_qb",
  "story/capter_01/006_qb",
  "story/capter_01/007_qb",
  "story/capter_01/008_qb",
  "story/capter_01/009_qb",
  "story/capter_01/010_qb",
  "story/capter_01/011_qb",
  "story/capter_01/012_qb",
  "story/capter_01/100_qb",
  "story/capter_02/000_qb",
  "story/capter_02/001_qb",
  "story/capter_02/002_qb",
  "story/capter_02/003_qb",
  "story/capter_02/004_qb",
  "story/capter_02/005_qb",
  "story/capter_02/006_qb",
  "story/capter_02/007_qb",
  "story/capter_02/008_qb",
  "story/capter_02/009_qb",
  "story/capter_02/010_qb",
  "story/capter_02/011_qb",
  "story/capter_02/012_qb",
  "story/capter_02/013_qb",
  "story/capter_02/014_qb",
  "story/capter_02/100_qb",
  "story/capter_03/000_qb",
  "story/capter_03/001_qb",
  "story/capter_03/002_qb",
  "story/capter_03/003_qb",
  "story/capter_03/004_qb",
  "story/capter_03/005_qb",
  "story/capter_03/006_qb",
  "story/capter_03/007_qb",
  "story/capter_03/008_qb",
  "story/capter_03/009_qb",
  "story/capter_03/010_qb",
  "story/capter_03/011_qb",
  "story/capter_03/012_qb",
  "story/capter_03/013_qb",
  "story/capter_03/014_qb",
  "story/capter_03/015_qb",
  "story/capter_03/016_qb",
  "story/capter_03/017_qb",
  "story/capter_03/100_qb",
  "story/capter_04/000_qb",
  "story/capter_04/001_qb",
  "story/capter_04/002_qb",
  "story/capter_04/003_qb",
  "story/capter_04/004_qb",
  "story/capter_04/005_qb",
  "story/capter_04/006_qb",
  "story/capter_04/007_qb",
  "story/capter_04/008_qb",
  "story/capter_04/009_qb",
  "story/capter_04/010_qb",
  "story/capter_04/011_qb",
  "story/capter_04/012_qb",
  "story/capter_04/013_qb",
  "story/capter_04/014_qb",
  "story/capter_04/015_qb",
  "story/capter_04/016_qb",
  "story/capter_04/100_qb",
  "story/capter_05/000_qb",
  "story/capter_05/001_qb",
  "story/capter_05/002_qb",
  "story/capter_05/003_qb",
  "story/capter_05/004_qb",
  "story/capter_05/005_qb",
  "story/capter_05/006_qb",
  "story/capter_05/007_qb",
  "story/capter_05/008_qb",
  "story/capter_05/009_qb",
  "story/capter_05/010_qb",
  "story/capter_05/011_qb",
  "story/capter_05/012_qb",
  "story/capter_05/013_qb",
  "story/capter_05/014_qb",
  "story/capter_05/015_qb",
  "story/capter_05/016_qb",
  "story/capter_05/100_qb",
  "story/capter_06/000_qb",
  "story/capter_06/001_qb",
  "story/capter_06/002_qb",
  "story/capter_06/003_qb",
  "story/capter_06/004_qb",
  "story/capter_06/005_qb",
  "story/capter_06/006_qb",
  "story/capter_06/007_qb",
  "story/capter_06/008_qb",
  "story/capter_06/009_qb",
  "story/capter_06/010_qb",
  "story/capter_06/011_qb",
  "story/capter_06/012_qb",
  "story/capter_06/013_qb",
  "story/capter_06/014_qb",
  "story/capter_06/015_qb",
  "story/capter_06/100_qb",
  "story/capter_06/100_qb_b",
  "story/capter_07/000_qb",
  "story/capter_07/001_qb",
  "story/capter_07/002_qb",
  "story/capter_07/003_qb",
  "story/capter_07/004_qb",
  "story/capter_07/005_qb",
  "story/capter_07/006_qb",
  "story/capter_07/007_qb",
  "story/capter_07/008_qb",
  "story/capter_07/009_qb",
  "story/capter_07/010_qb",
  "story/capter_07/011_qb",
  "story/capter_07/012_qb",
  "story/capter_07/013_qb",
  "story/capter_07/014_qb",
  "story/capter_07/015_qb",
  "story/capter_07/016_qb",
  "story/capter_07/100_qb",
  "story/capter_07b/000_qb",
  "story/capter_07b/001_qb",
  "story/capter_07b/002_qb",
  "story/capter_07b/003_qb",
  "story/capter_07b/004_qb",
  "story/capter_07b/005_qb",
  "story/capter_07b/006_qb",
  "story/capter_07b/007_qb",
  "story/capter_07b/008_qb",
  "story/capter_07b/009_qb",
  "story/capter_07b/010_qb",
  "story/capter_07b/011_qb",
  "story/capter_07b/012_qb",
  "story/capter_07b/013_qb",
  "story/capter_07b/100_qb",
  "story/capter_second_op/000_qb",
  "story/capter_08/000_qb",
  "story/capter_08/001_qb",
  "story/capter_08/002_qb",
  "story/capter_08/003_qb",
  "story/capter_08/004_qb",
  "story/capter_08/005_qb",
  "story/capter_08/006_qb",
  "story/capter_08/007_qb",
  "story/capter_08/008_qb",
  "story/capter_08/100_qb",
  "story/capter_09/000_qb",
  "story/capter_09/001_qb",
  "story/capter_09/002_qb",
  "story/capter_09/003_qb",
  "story/capter_09/004_qb",
  "story/capter_09/005_qb",
  "story/capter_09/006_qb",
  "story/capter_09/007_qb",
  "story/capter_09/008_qb",
  "story/capter_09/009_qb",
  "story/capter_09/010_qb",
  "story/capter_09/100_qb",
  "story/capter_10/000_qb",
  "story/capter_10/001_qb",
  "story/capter_10/002_qb",
  "story/capter_10/003_qb",
  "story/capter_10/004_qb",
  "story/capter_10/005_qb",
  "story/capter_10/006_qb",
  "story/capter_10/007_qb",
  "story/capter_10/008_qb",
  "story/capter_10/009_qb",
  "story/capter_10/010_qb",
  "story/capter_10/011_qb",
  "story/capter_10/012_qb",
  "story/capter_10/100_qb",
  "story/capter_11/000_qb",
  "story/capter_11/001_qb",
  "story/capter_11/002_qb",
  "story/capter_11/003_qb",
  "story/capter_11/004_qb",
  "story/capter_11/005_qb",
  "story/capter_11/006_qb",
  "story/capter_11/007_qb",
  "story/capter_11/008_qb",
  "story/capter_11/009_qb",
  "story/capter_11/010_qb",
  "story/capter_11/011_qb",
  "story/capter_11/012_qb",
  "story/capter_11/013_qb",
  "story/capter_11/014_qb",
  "story/capter_11/015_qb",
  "story/capter_11/100_qb",
  "story/capter_12/000_qb",
  "story/capter_12/001_qb",
  "story/capter_12/002_qb",
  "story/capter_12/003_qb",
  "story/capter_12/004_qb",
  "story/capter_12/005_qb",
  "story/capter_12/006_qb",
  "story/capter_12/007_qb",
  "story/capter_12/008_qb",
  "story/capter_12/009_qb",
  "story/capter_12/010_qb",
  "story/capter_12/011_qb",
  "story/capter_12/012_qb",
  "story/capter_12/013_qb",
  "story/capter_12/014_qb",
  "story/capter_12/015_qb",
  "story/capter_12/016_qb",
  "story/capter_12/100_qb",
  "story/capter_12/100_qb_b",
  "story/capter_13/000_qb",
  "story/capter_13/001_qb",
  "story/capter_13/002_qb",
  "story/capter_13/003_qb",
  "story/capter_13/006_qb",
  "story/capter_13/007_qb",
  "story/capter_13/008_qb",
  "story/capter_13/009_qb",
  "story/capter_13/010_qb",
  "story/capter_13/011_qb",
  "story/capter_13/013_qb",
  "story/capter_13/014_qb",
  "story/capter_13/015_qb",
  "story/capter_13/016_qb",
  "story/capter_13/100_qb",
  "story/capter_13b/000_qb",
  "story/capter_13b/001_qb",
  "story/capter_13b/002_qb",
  "story/capter_13b/003_qb",
  "story/capter_13b/004_qb",
  "story/capter_13b/005_qb",
  "story/capter_13b/006_qb",
  "story/capter_13b/007_qb",
  "story/capter_13b/008_qb",
  "story/capter_13b/009_qb",
  "story/capter_13b/010_qb",
  "story/capter_13b/011_qb",
  "story/capter_13b/012_qb",
  "story/capter_13b/013_qb",
  "story/capter_13b/014_qb",
  "story/capter_13b/017_qb",
  "story/capter_13b/100_qb",
  "story/capter_14/000_qb",
  "story/capter_14/001_qb",
  "story/capter_14/002_qb",
  "story/capter_14/003_qb",
  "story/capter_14/004_qb",
  "story/capter_14/005_qb",
  "story/capter_14/006_qb",
  "story/capter_14/007_qb",
  "story/capter_14/008_qb",
  "story/capter_14/009_qb",
  "story/capter_14/010_qb",
  "story/capter_14/011_qb",
  "story/capter_14/012_qb",
  "story/capter_14/013_qb",
  "story/capter_14/014_qb",
  "story/capter_14/015_qb",
  "story/capter_14/100_qb"
]

let urlArray_Drama = []

let urlArray_Battle = []

for (const drama of dramaArray) {
  const dramaToGet = encodeURIComponent(drama);
  const encodedUrl = dramaToGet.replace(/\//g, '%2f');
  const dec = `lang=1&path=${encodedUrl}&_tm_=8`;
  const enc = encrypt(dec, ek);
  const url = `https://d2r-sim.d2megaten.com/socialsv/Drama.do?param=${enc}`;
  urlArray_Drama.push(url);
}

for (let i = 0; i < dramaArray.length; i++) {
  wait(5000)
  let url = urlArray_Drama[i]

  fs.mkdir(`../json/dramas/${dramaArray[i]}/..`, { recursive: true }, (err) => {
    if (err) {
      console.error(`Error creating directory: ${err.message}`);
    } else {
      console.log(`Created directory: ${dramaArray[i]}`);
    }
  });

  client.get(url)
    .then(response => {
      const jsonData = response.data;
      const fileName = `../json/dramas/${dramaArray[i]}`;

      fs.writeFile(fileName, JSON.stringify(jsonData, null, 2), (err) => {
        if (err) throw err;
        console.log(`JSON data saved to ${fileName}`);
      });
    })
    .catch(error => {
      console.error('Error:', error);
    });
}